# https://dev.to/vvo/a-rails-and-postgresql-setup-for-github-actions-ci-nc8

name: Test

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest

# Similar to docker-compose.yml but not the same
    services:
      postgres:
        image: postgres:11.6-alpine
        env:
          POSTGRES_PASSWORD: password
        ports:
          - 5432:5432
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Install Ruby version specified in `.ruby-version`
        uses: eregon/use-ruby-action@master # this will use by default the .ruby-version file in your repository
      - name: Install required apt packages
        run: |
          sudo apt -y install libpq-dev
          
          # add
          sudo apt -y install libsqlite3-dev
      - name: Setup cache key and directory for gems cache
        uses: actions/cache@v1
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gem-use-ruby-${{ hashFiles('**/Gemfile.lock') }}
      - name: Read Node.js version to install from `.nvmrc`
        run: echo "##[set-output name=NVMRC;]$(cat .nvmrc)"
        id: nvm
      - name: Install required Node.js version
        uses: actions/setup-node@v1
        with:
          node-version: "${{ steps.nvm.outputs.NVMRC }}"
      - name: Get Yarn cache directory path
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: Setup cache key and directory for node_modules cache
        uses: actions/cache@v1
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
      - name: Bundle install
        run: |
          bundle config path vendor/bundle
          bundle install --jobs 4 --retry 3
      - name: Yarn install
        run: yarn --frozen-lockfile
      - name: Rails setup
        # env: # Or as an environment variable
        #   RAILS_MASTER_KEY: ${{ secrets.RAILS_MASTER_KEY }}

        run: |
          # bundle exec rails db:setup
          
          # bin/rails db:prepare
          # bin/rails db:setup
          # bin/rails restart
          
          # bin/rails db:create
          # bin/rails db:schema:load
          # bin/rails db:seed
          bin/rails db:setup



      - name: Install chrome
        run: |
          wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
          echo 'deb http://dl.google.com/linux/chrome/deb/ stable main' | sudo tee /etc/apt/sources.list.d/google-chrome.list
          apt update -y
          apt install -y google-chrome-stable
      - name: Rubocop
        run: |
          bundle exec rubocop ./rubocop.yml --parallel
      - name: Lint
        run: |
          bundle exec slim-lint app/views -c config/slim_lint.yml
          bin/yarn prettier-eslint --write 'app/**/*.js'
          bin/yarn prettier-eslint --write 'app/**/*.vue'
          bin/yarn prettier-eslint --write 'test/**/*.js'
      - name: Test
        run: |
          bundle exec rails test
          yarn test
          bundle exec rails test:system
